// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiDispositivosAlmacenamiento;

#nullable disable

namespace WebApiDispositivosAlmacenamiento.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230310010431_Entities")]
    partial class Entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.DispositivoAlmacenamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capacidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDispositivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DispositivosAlmacenamiento");
                });

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreMarca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servicios")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DispositivoAlmacenamientoId")
                        .HasColumnType("int");

                    b.Property<string>("Firmware")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreModelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadEscritura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadLectura")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoAlmacenamientoId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.Modelo", b =>
                {
                    b.HasOne("WebApiDispositivosAlmacenamiento.Entidades.DispositivoAlmacenamiento", "DispositivoAlmacenamiento")
                        .WithMany("Modelos")
                        .HasForeignKey("DispositivoAlmacenamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiDispositivosAlmacenamiento.Entidades.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DispositivoAlmacenamiento");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.DispositivoAlmacenamiento", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("WebApiDispositivosAlmacenamiento.Entidades.Marca", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
